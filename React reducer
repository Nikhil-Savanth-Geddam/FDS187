React reducer():

import React, { useReducer } from 'react';

// Define the reducer function
const appleReducer = (state, action) => {
  switch (action.type) {
    case 'ADD APPLE':
      return state + 1;
    case 'EAT APPLE':
      return state - 1;
    default:
      return state;
  }
};


function App() {
  // Initialize the state with the reducer function and initial value
  const [state, dispatch] = useReducer(appleReducer, 3);

  return (
    <div style={{ padding: '20px' }}>
      <h1>Apple Counter</h1>
      <img src={require('./components/apple2.jpg')} />
      <p>Number of Apples: {state}</p>
      <button onClick={() => dispatch({ type: 'ADD APPLE' })}>ADD APPLE</button>
      <button onClick={() => dispatch({ type: 'EAT APPLE' })}>EAT APPLE</button>
    </div>
  );
}

export default App;
import React, { useReducer } from 'react';

// Define the reducer function
const appleReducer = (state, action) => {
  switch (action.type) {
    case 'ADD APPLE':
      return state + 1;
    case 'EAT APPLE':
      return state - 1;
    default:
      return state;
  }
};

function App() {
  // Initialize the state with the reducer function and initial value
  const [state, dispatch] = useReducer(appleReducer, 3);

  // Create an array of apple images
  const apples = Array(state).fill(null).map((_, index) => (
    <img key={index} src={require('./components/apple2.jpg')} />
  ));

  return (
    <div style={{ padding: '20px' }}>
      <h1>Apple Counter</h1>
      <div style={{ display: 'flex', gap: '10px' }}>{apples}</div>
      <p>Number of Apples: {state}</p>
      <button onClick={() => dispatch({ type: 'ADD APPLE' })}>ADD APPLE</button>
      <button onClick={() => dispatch({ type: 'EAT APPLE' })}>EAT APPLE</button>
    </div>
  );
}

export default App;


Parent and child component:
import React from 'react';
import ParentComponent from './components/ParentComponent';

function App() {
  return (
    <div>
      <ParentComponent />
    </div>
  );
}

export default App;
import React, { useState } from 'react';
import ChildComponent from './ChildComponent';

function ParentComponent() {
  const [message, setMessage] = useState('Hello from Parent Component!');
  const [buttonClicked, setButtonClicked] = useState(false);

  const handleButtonClicked = () => {
    setButtonClicked(true);
  };

  return (
    <div>
      <h1>Parent Component</h1>
      <p>Message: {message}</p>
      <ChildComponent
        message={message}
        onButtonClicked={handleButtonClicked}
        buttonClicked={buttonClicked}
      />
    </div>
  );
}

export default ParentComponent;


import React from 'react';

function ChildComponent({ message, onButtonClicked, buttonClicked }) {
  return (
    <div>
      <h1>Child Component</h1>
      <button onClick={onButtonClicked}>Click Me!</button>
      {buttonClicked && (
        <p>
          You clicked the button! The message from the Parent Component is: {message}
        </p>
      )}
    </div>
  );
}

export default ChildComponent;

Parent Component
Message: Hello from Parent Component!
Child Component
Click Me!
You clicked the button! The message from the Parent Component is: Hello from Parent Component!
